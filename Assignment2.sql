CREATE DATABASE Assignment2

CREATE TABLE Products
(
	ProductID INT PRIMARY KEY,
	ProductName VARCHAR(50) NOT NULL,
	QuantityInStock INT NOT NULL,
	UnitPrice INT NOT NULL,
	CONSTRAINT  CHK_QUANT CHECK (QuantityInStock >0),
	CONSTRAINT  CHK_UNIT_PRICE CHECK (UnitPrice >0),
	Category VARCHAR(50) NOT NULL,
);

 

CREATE TABLE Cart
(
	CartID INT PRIMARY KEY NOT NULL,
	ProductID INT FOREIGN KEY(ProductID)
	REFERENCES Products(ProductID),
	Quantity INT NOT NULL
	CONSTRAINT  CHK_QUANTITY CHECK (Quantity >0),
);


INSERT INTO Products VALUES (1,'TABLE',20,10000,'FURNITURE');
INSERT INTO Products VALUES (2,'CHAIR',30,12000,'FURNITURE');
INSERT INTO Products VALUES (3, 'LAPTOP',45,100000,'ELECTRONICS');
INSERT INTO Products VALUES (4,'PEN',100,30,'STATIONARY');
INSERT INTO Products VALUES (5,'NOTEBOOK',70,150,'STATIONARY');
INSERT INTO Products VALUES (6,'CHARGER',50,1500,'ELECTRONICS');

INSERT INTO Cart VALUES (101,2,5);
INSERT INTO Cart VALUES (102,5,12);
INSERT INTO Cart VALUES (103,4,20);
INSERT INTO Cart VALUES (104,3,10);
INSERT INTO Cart VALUES (105,1,8);

SELECT ProductName, QuantityInStock, UnitPrice, CartID 
FROM Products
FULL OUTER JOIN Cart
ON  Products.ProductID = Cart.ProductID

SELECT ProductName, QuantityInStock, UnitPrice, CartID 
FROM Products
LEFT OUTER JOIN Cart
ON  Products.ProductID = Cart.ProductID 

SELECT ProductName, QuantityInStock, UnitPrice, CartID 
FROM Products
RIGHT OUTER JOIN Cart
ON  Products.ProductID = Cart.ProductID 

SELECT ProductName, QuantityInStock, UnitPrice, CartID 
FROM Products
INNER JOIN Cart
ON  Products.ProductID = Cart.ProductID 

CREATE TABLE Student(
	StudentId INT PRIMARY KEY NOT NULL,
	StudentName VARCHAR(50),
	CourseName VARCHAR(50),
	CityName VARCHAR(50),
	ContactNumber VARCHAR(10)
);

INSERT INTO Student VALUES (1,'YASH','JAVA','DELHI','9667116877'); 
INSERT INTO Student VALUES (2,'SARTHAK','C++','CHANDIGARH','1234567890'); 
INSERT INTO Student VALUES (3,'MOHINI','JAVA','BHOPAL','0987654321'); 
INSERT INTO Student VALUES (4,'REETHU','PYTHON','DELHI','6547652343'); 
INSERT INTO Student VALUES (5,'SWETHA','PYTHON','HYDERABAD','9876767875'); 
INSERT INTO Student VALUES (6,'MANASA','ANGULAR','HYDERABAD','9000987645'); 
INSERT INTO Student VALUES (7,'KARAN','ANGULAR','CHENNAI','8767878787'); 
INSERT INTO Student VALUES (8,'AADARSH','C++','CHENNAI','9890065412'); 
INSERT INTO Student VALUES (9,'ROSHAN','ANGULAR','MUMBAI','1245980986'); 
INSERT INTO Student VALUES (10,'TRIPTHI','JAVA','DELHI','7876543299'); 

SELECT COUNT(*) FROM Student WHERE CourseName = 'ANGULAR';
SELECT COUNT(*) FROM Student WHERE CityName = 'HYDERABAD';

SELECT CityName,COUNT(*) FROM Student 
GROUP BY CityName

SELECT CourseName,COUNT(*) FROM Student 
GROUP BY CourseName

SELECT CourseName, CityName, COUNT(*) FROM Student 
GROUP BY CourseName,CityName

CREATE TABLE Users
(
	UserID INT PRIMARY KEY,
	Username VARCHAR(50),
	Password VARCHAR(50),
	ContactNumber VARCHAR(10),
	City VARCHAR(50)
);

CREATE TABLE Orders
(
	OrderID INT PRIMARY KEY,
	CardID INT NOT NULL,
	OrderDate DATE,
	TotalAmount INT,
	UserID INT FOREIGN KEY(UserID)
	REFERENCES Users(UserID),
);

INSERT INTO Users VALUES (10,'YASH123','YASH@123','1233456790','DELHI');
INSERT INTO Users VALUES (20,'SARTHAK123','SARTHAK@123','0987654321','CHANDIGARH');
INSERT INTO Users VALUES (30, 'MOHINI123','MOHINI@123','6767676767','BHOPAL');
INSERT INTO Users VALUES (40,'KARAN123','KARAN@123','9898989898','ASSAM');
INSERT INTO Users VALUES (50,'SWETHA123','SWETHA@123','9898767654','HYDERABAD');

INSERT INTO Orders VALUES (12345,111,'2023-08-23',150000,20);
INSERT INTO Orders VALUES (12346,112,'2023-06-29',12000,30);
INSERT INTO Orders VALUES (12347,113,'2023-10-06',70450,20);
INSERT INTO Orders VALUES (12348,114,'2023-04-12',40500,40);
INSERT INTO Orders VALUES (12349,115,'2023-05-29',23700,50);

SELECT * FROM Orders   
WHERE UserID
IN (SELECT UserID FROM Users WHERE City='HYDERABAD')

SELECT * FROM Orders   
WHERE UserID
NOT IN (SELECT UserID FROM Users WHERE City='HYDERABAD')

SELECT * FROM Products
WHERE EXISTS (SELECT * FROM Products WHERE ProductID = 3)

